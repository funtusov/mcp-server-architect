interactions:
- request:
    body: '{"query": "What is the Model Context Protocol", "numResults": 3, "useAutoprompt":
      true, "contents": {"text": true}}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '115'
      Content-Type:
      - application/json
      User-Agent:
      - exa-py 1.9.1
    method: POST
    uri: https://api.exa.ai/search
  response:
    body:
      string: "{\"requestId\":\"b2a723b854c31685b8bf4cbda11dbe9a\",\"autopromptString\":\"What
        is the Model Context Protocol\",\"resolvedSearchType\":\"keyword\",\"results\":[{\"id\":\"https://www.anthropic.com/news/model-context-protocol\",\"title\":\"Introducing
        the Model Context Protocol - Anthropic\",\"url\":\"https://www.anthropic.com/news/model-context-protocol\",\"publishedDate\":\"2024-11-25T00:00:00.000Z\",\"author\":\"\",\"text\":\"Today,
        we're open-sourcing the Model Context Protocol (MCP), a new standard for connecting
        AI assistants to the systems where data lives, including content repositories,
        business tools, and development environments. Its aim is to help frontier
        models produce better, more relevant responses. As AI assistants gain mainstream
        adoption, the industry has invested heavily in model capabilities, achieving
        rapid advances in reasoning and quality. Yet even the most sophisticated models
        are constrained by their isolation from data\u2014trapped behind information
        silos and legacy systems. Every new data source requires its own custom implementation,
        making truly connected systems difficult to scale. MCP addresses this challenge.
        It provides a universal, open standard for connecting AI systems with data
        sources, replacing fragmented integrations with a single protocol. The result
        is a simpler, more reliable way to give AI systems access to the data they
        need. Model Context Protocol The Model Context Protocol is an open standard
        that enables developers to build secure, two-way connections between their
        data sources and AI-powered tools. The architecture is straightforward: developers
        can either expose their data through MCP servers or build AI applications
        (MCP clients) that connect to these servers. Today, we're introducing three
        major components of the Model Context Protocol for developers: The Model Context
        Protocol specification and SDKs Local MCP server support in the Claude Desktop
        apps An open-source repository of MCP servers Claude 3.5 Sonnet is adept at
        quickly building MCP server implementations, making it easy for organizations
        and individuals to rapidly connect their most important datasets with a range
        of AI-powered tools. To help developers start exploring, we\u2019re sharing
        pre-built MCP servers for popular enterprise systems like Google Drive, Slack,
        GitHub, Git, Postgres, and Puppeteer. Early adopters like Block and Apollo
        have integrated MCP into their systems, while development tools companies
        including Zed, Replit, Codeium, and Sourcegraph are working with MCP to enhance
        their platforms\u2014enabling AI agents to better retrieve relevant information
        to further understand the context around a coding task and produce more nuanced
        and functional code with fewer attempts. \\\"At Block, open source is more
        than a development model\u2014it\u2019s the foundation of our work and a commitment
        to creating technology that drives meaningful change and serves as a public
        good for all,\u201D said Dhanji R. Prasanna, Chief Technology Officer at Block.
        \u201COpen technologies like the Model Context Protocol are the bridges that
        connect AI to real-world applications, ensuring innovation is accessible,
        transparent, and rooted in collaboration. We are excited to partner on a protocol
        and use it to build agentic systems, which remove the burden of the mechanical
        so people can focus on the creative.\u201D Instead of maintaining separate
        connectors for each data source, developers can now build against a standard
        protocol. As the ecosystem matures, AI systems will maintain context as they
        move between different tools and datasets, replacing today's fragmented integrations
        with a more sustainable architecture. Getting started Developers can start
        building and testing MCP connectors today. All Claude.ai plans support connecting
        MCP servers to the Claude Desktop app. Claude for Work customers can begin
        testing MCP servers locally, connecting Claude to internal systems and datasets.
        We'll soon provide developer toolkits for deploying remote production MCP
        servers that can serve your entire Claude for Work organization. To start
        building: Install pre-built MCP servers through the Claude Desktop app Follow
        our quickstart guide to build your first MCP server Contribute to our open-source
        repositories of connectors and implementations An open community We\u2019re
        committed to building MCP as a collaborative, open-source project and ecosystem,
        and we\u2019re eager to hear your feedback. Whether you\u2019re an AI tool
        developer, an enterprise looking to leverage existing data, or an early adopter
        exploring the frontier, we invite you to build the future of context-aware
        AI together.\",\"image\":\"https://cdn.sanity.io/images/4zrzovbb/website/1aef864f9b246c740fe3cef6e1068f2220995d5e-2400x1260.png\",\"favicon\":\"https://www.anthropic.com/favicon.ico\"},{\"id\":\"https://modelcontextprotocol.io/introduction\",\"title\":\"Model
        Context Protocol: Introduction\",\"url\":\"https://modelcontextprotocol.io/introduction\",\"publishedDate\":\"2023-12-21T01:33:54.000Z\",\"author\":\"\",\"text\":\"MCP
        is an open protocol that standardizes how applications provide context to
        LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides
        a standardized way to connect your devices to various peripherals and accessories,
        MCP provides a standardized way to connect AI models to different data sources
        and tools. \\n Why MCP? \\n MCP helps you build agents and complex workflows
        on top of LLMs. LLMs frequently need to integrate with data and tools, and
        MCP provides: \\n \\n A growing list of pre-built integrations that your LLM
        can directly plug into \\n The flexibility to switch between LLM providers
        and vendors \\n Best practices for securing your data within your infrastructure
        \\n \\n General architecture \\n At its core, MCP follows a client-server
        architecture where a host application can connect to multiple servers: \\n
        \\n MCP Hosts : Programs like Claude Desktop, IDEs, or AI tools that want
        to access data through MCP \\n MCP Clients : Protocol clients that maintain
        1:1 connections with servers \\n MCP Servers : Lightweight programs that each
        expose specific capabilities through the standardized Model Context Protocol
        \\n Local Data Sources : Your computer\u2019s files, databases, and services
        that MCP servers can securely access \\n Remote Services : External systems
        available over the internet (e.g., through APIs) that MCP servers can connect
        to \\n \\n Get started \\n Choose the path that best fits your needs: \\n
        Quick Starts \\n Examples \\n Tutorials \\n Building MCP with LLMs Learn how
        to use LLMs like Claude to speed up your MCP development Debugging Guide Learn
        how to effectively debug MCP servers and integrations MCP Inspector Test and
        inspect your MCP servers with our interactive debugging tool MCP Workshop
        (Video, 2hr) \\n Explore MCP \\n Dive deeper into MCP\u2019s core concepts
        and capabilities: \\n Contributing \\n Want to contribute? Check out our Contributing
        Guide to learn how you can help improve MCP. \\n Support and Feedback \\n
        Here\u2019s how to get help or provide feedback: \\n \\n For bug reports and
        feature requests related to the MCP specification, SDKs, or documentation
        (open source), please create a GitHub issue \\n For discussions or Q&amp;A
        about the MCP specification, use the specification discussions \\n For discussions
        or Q&amp;A about other MCP open source components, use the organization discussions
        \\n For bug reports, feature requests, and questions related to Claude.app
        and claude.ai\u2019s MCP integration, please email [email protected]\",\"image\":\"https://mcp.mintlify.app/_next/image?url=%2Fapi%2Fog%3Fdivision%3DDocumentation%26title%3DIntroduction%26description%3DGet%2Bstarted%2Bwith%2Bthe%2BModel%2BContext%2BProtocol%2B%2528MCP%2529%26logoLight%3Dhttps%253A%252F%252Fmintlify.s3.us-west-1.amazonaws.com%252Fmcp%252Flogo%252Flight.svg%26logoDark%3Dhttps%253A%252F%252Fmintlify.s3.us-west-1.amazonaws.com%252Fmcp%252Flogo%252Fdark.svg%26primaryColor%3D%252309090b%26lightColor%3D%2523FAFAFA%26darkColor%3D%252309090b&w=1200&q=100\",\"favicon\":\"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-32x32.png?v=3\"},{\"id\":\"https://docs.anthropic.com/en/docs/agents-and-tools/mcp\",\"title\":\"Model
        Context Protocol (MCP) - Anthropic API\",\"url\":\"https://docs.anthropic.com/en/docs/agents-and-tools/mcp\",\"author\":\"\",\"text\":\"MCP
        is an open protocol that standardizes how applications provide context to
        LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides
        a standardized way to connect your devices to various peripherals and accessories,
        MCP provides a standardized way to connect AI models to different data sources
        and tools. \\n MCP Documentation Learn more about the protocol, how to build
        servers and clients, and discover those made by others. \\n MCP in Claude
        Desktop Learn how to set up MCP in Claude for Desktop, such as letting Claude
        read and write files to your computer\u2019s file system.\",\"favicon\":\"https://mintlify.s3-us-west-1.amazonaws.com/anthropic/_generated/favicon/favicon-32x32.png?v=3\"}],\"costDollars\":{\"total\":0.008,\"search\":{\"neural\":0.005},\"contents\":{\"text\":0.003}}}"
    headers:
      CF-RAY:
      - 9279494fea350146-MAD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 28 Mar 2025 18:45:47 GMT
      NEL:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=3Y2sAP9BPXeRRs0Kg%2FtaNYq8Bg7IKAS27qwTXuSLy%2Biz1692l4zfUxYoIkhw9DGp%2BL6L5SYQrV7LK%2FH7nt268osn9c2gzUGZIf4%2F%2BhHCdBnG%2Fvg2SenfuUmo7ak%3D"}],"group":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-credentials:
      - 'true'
      cf-cache-status:
      - DYNAMIC
      etag:
      - W/"2370-jhHG+e0cGztzxQC0ODK50lSGsYA"
      server-timing:
      - cfL4;desc="?proto=TCP&rtt=14859&min_rtt=13488&rtt_var=6037&sent=4&recv=7&lost=0&retrans=0&sent_bytes=2824&recv_bytes=996&delivery_rate=214709&cwnd=251&unsent_bytes=0&cid=66fe3bc1b8413b45&ts=2013&x=0"
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Origin
      x-powered-by:
      - Express
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '198'
      x-ratelimit-reset:
      - '1743187548'
    status:
      code: 200
      message: OK
version: 1
