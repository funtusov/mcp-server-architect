interactions:
- request:
    body: '{"contents":[{"role":"user","parts":[{"text":"Generate a PRD for the following
      task: Create a simple calculator app with basic operations"}]}],"system_instruction":{"role":"user","parts":[{"text":"\n        You
      are an expert software architect and technical lead.\n        \n        Your
      task is to create a Product Requirements Document (PRD) or High-Level Design
      Document based on the \n        user''s request and any code context you gather
      using your tools.\n        \n        IMPORTANT: Before beginning any analysis,
      use the code_reader tool to examine the codebase structure\n        and understand
      the existing architecture.\n        \n        Your PRD should include:\n        1.
      Overview of the requested feature/task\n        2. Technical requirements and
      constraints\n        3. Proposed architecture/design\n        4. Implementation
      plan with specific files to modify\n        5. Potential challenges and mitigations\n        \n        You
      have access to the following tool:\n        - code_reader: Read source code
      files from the codebase to understand the architecture\n        \n        Format
      your response in markdown. Be concise but comprehensive.\n        Use your tools
      strategically to gather all the information you need.\n        "}]},"tools":{"function_declarations":[{"name":"code_reader","description":"<summary>Read
      and analyze source code files from the specified codebase path, combining them\ninto
      a unified code context for the agent to analyze.</summary>\n<returns>\n<description>A
      string containing the code context or error message</description>\n</returns>","parameters":{"description":"Input
      schema for the code reader tool.","properties":{"paths":{"description":"List
      of file or directory paths to read, relative to the base codebase path","items":{"type":"string"},"type":"array"},"filter_extensions":{"items":{"type":"string"},"type":"array","nullable":true},"max_files":{"type":"integer","nullable":true}},"required":["paths"],"type":"object"}},{"name":"web_search","description":"<summary>Search
      the web for information on a given query using Exa API.</summary>\n<returns>\n<description>A
      string containing the search results or error message</description>\n</returns>","parameters":{"description":"Input
      schema for the web search tool.","properties":{"query":{"description":"The search
      query to execute","type":"string"},"num_results":{"type":"integer","nullable":true}},"required":["query"],"type":"object"}},{"name":"llm","description":"<summary>Execute
      a prompt against a configured LLM.</summary>\n<returns>\n<description>The text
      response from the LLM or an error message</description>\n</returns>","parameters":{"description":"Input
      schema for the LLM tool.","properties":{"prompt":{"description":"The prompt
      to send to the LLM","type":"string"},"model":{"type":"string","nullable":true},"temperature":{"type":"number","nullable":true},"max_tokens":{"type":"integer","nullable":true}},"required":["prompt"],"type":"object"}}]}}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2977'
      content-type:
      - application/json
      host:
      - generativelanguage.googleapis.com
      user-agent:
      - pydantic-ai/0.0.46
    method: POST
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-exp-03-25:generateContent
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAC/3VTwW7bMAy9+ysIXXpxgiJD1q2XHdoOyGFo0QXDgLVYWZlJtMiSIdFogiD/Pkpu
        EidtcwjsR/Lx8ZHeFABKo6tMhUxRXcIfQQA2+T/FvGNyLIEdJGCDgQ+53W/Te5YUplUqUrdLXJdg
        ic8i6EDSBBDu7q9h5gPwgiCaurEEGq1uLbKg2DTDB/fgvpsQuYQJOKIK2EPrKhJI1ObKLG3FQ5hE
        eTdRiB29pHJrNLLxroREFwhepGtVGTcHw4kJHdDKRE6I9hU9Y6RvMDmzFtpImf0p4X9FsfR8khpv
        U6FekF7meBP8P9IMkUOruQ007OpFX2B4XoP1fpn4kXN+8J6hMkFqfFjnAVXPsm35sZez1uk0zhVa
        e7SI17jDmpLXPcWqPE3CMI/vFOdt8uJ0m/vgUL1BH0+QbfHR2+H58aBHBW+z3Frk2h39fn41M87E
        xT1h9C6l/Zze3u3HUUZuYCXwebFrkKlVG3FOP4hR7hj3cyrZUt3w1C/JXfk23/H466hj6939UcKX
        8WucPaM9Cn2+uCjfEMdraWts38LetyJTojW8TqNMb35Pe5uRBse6dl4UO5uzK51Rv+T0TefInGrx
        aDAajgciY0CrZnD+aTAaq2Jb/AdBSFV30QMAAA==
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sat, 29 Mar 2025 16:20:04 GMT
      Server:
      - scaffolding on HTTPServer2
      Server-Timing:
      - gfet4t7; dur=40347
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - X-Origin
      - Referer
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-XSS-Protection:
      - '0'
    status:
      code: 200
      message: OK
- request:
    body: '{"contents":[{"role":"user","parts":[{"text":"Generate a PRD for the following
      task: Create a simple calculator app with basic operations"}]},{"role":"model","parts":[{"text":"Okay,
      let''s create a PRD for the simple calculator app.\n\nFirst, I need to understand
      the context. Is this a new application, or are we adding it to an existing codebase?
      I''ll use the `code_reader` tool to check the project structure. I''ll start
      by looking at the root directory.\n\n"},{"functionCall":{"name":"code_reader","args":{"paths":["."]}}}]},{"role":"user","parts":[{"functionResponse":{"name":"code_reader","response":{"return_value":"#
      Code Context\nIncluding 1 files from the specified paths.\n\n# File: main.py\n```\n\ndef
      add(a, b):\n    \"\"\"Add two numbers.\"\"\"\n    return a + b\n\ndef subtract(a,
      b):\n    \"\"\"Subtract b from a.\"\"\"\n    return a - b\n\n```\n\n"}}}]}],"system_instruction":{"role":"user","parts":[{"text":"\n        You
      are an expert software architect and technical lead.\n        \n        Your
      task is to create a Product Requirements Document (PRD) or High-Level Design
      Document based on the \n        user''s request and any code context you gather
      using your tools.\n        \n        IMPORTANT: Before beginning any analysis,
      use the code_reader tool to examine the codebase structure\n        and understand
      the existing architecture.\n        \n        Your PRD should include:\n        1.
      Overview of the requested feature/task\n        2. Technical requirements and
      constraints\n        3. Proposed architecture/design\n        4. Implementation
      plan with specific files to modify\n        5. Potential challenges and mitigations\n        \n        You
      have access to the following tool:\n        - code_reader: Read source code
      files from the codebase to understand the architecture\n        \n        Format
      your response in markdown. Be concise but comprehensive.\n        Use your tools
      strategically to gather all the information you need.\n        "}]},"tools":{"function_declarations":[{"name":"code_reader","description":"<summary>Read
      and analyze source code files from the specified codebase path, combining them\ninto
      a unified code context for the agent to analyze.</summary>\n<returns>\n<description>A
      string containing the code context or error message</description>\n</returns>","parameters":{"description":"Input
      schema for the code reader tool.","properties":{"paths":{"description":"List
      of file or directory paths to read, relative to the base codebase path","items":{"type":"string"},"type":"array"},"filter_extensions":{"items":{"type":"string"},"type":"array","nullable":true},"max_files":{"type":"integer","nullable":true}},"required":["paths"],"type":"object"}},{"name":"web_search","description":"<summary>Search
      the web for information on a given query using Exa API.</summary>\n<returns>\n<description>A
      string containing the search results or error message</description>\n</returns>","parameters":{"description":"Input
      schema for the web search tool.","properties":{"query":{"description":"The search
      query to execute","type":"string"},"num_results":{"type":"integer","nullable":true}},"required":["query"],"type":"object"}},{"name":"llm","description":"<summary>Execute
      a prompt against a configured LLM.</summary>\n<returns>\n<description>The text
      response from the LLM or an error message</description>\n</returns>","parameters":{"description":"Input
      schema for the LLM tool.","properties":{"prompt":{"description":"The prompt
      to send to the LLM","type":"string"},"model":{"type":"string","nullable":true},"temperature":{"type":"number","nullable":true},"max_tokens":{"type":"integer","nullable":true}},"required":["prompt"],"type":"object"}}]}}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3705'
      content-type:
      - application/json
      host:
      - generativelanguage.googleapis.com
      user-agent:
      - pydantic-ai/0.0.46
    method: POST
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-exp-03-25:generateContent
  response:
    body:
      string: !!binary |
        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
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sat, 29 Mar 2025 16:20:34 GMT
      Server:
      - scaffolding on HTTPServer2
      Server-Timing:
      - gfet4t7; dur=29822
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - X-Origin
      - Referer
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-XSS-Protection:
      - '0'
    status:
      code: 200
      message: OK
version: 1
