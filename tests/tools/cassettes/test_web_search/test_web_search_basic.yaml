interactions:
- request:
    body: '{"query": "What is the Model Context Protocol", "numResults": 3, "useAutoprompt":
      true, "contents": {"text": true}}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '115'
      Content-Type:
      - application/json
      User-Agent:
      - exa-py 1.9.1
    method: POST
    uri: https://api.exa.ai/search
  response:
    body:
      string: "{\"requestId\":\"9615a1cbd8647daaf8182b6c29a0f613\",\"autopromptString\":\"What
        is the Model Context Protocol\",\"resolvedSearchType\":\"keyword\",\"results\":[{\"id\":\"https://www.anthropic.com/news/model-context-protocol\",\"title\":\"Introducing
        the Model Context Protocol - Anthropic\",\"url\":\"https://www.anthropic.com/news/model-context-protocol\",\"publishedDate\":\"2024-11-25T12:00:00.000Z\",\"author\":\"\",\"text\":\"Application
        error: a client-side exception has occurred (see the browser console for more
        information).\"},{\"id\":\"https://modelcontextprotocol.io/introduction\",\"title\":\"Model
        Context Protocol: Introduction\",\"url\":\"https://modelcontextprotocol.io/introduction\",\"publishedDate\":\"2023-12-21T01:33:54.000Z\",\"author\":\"\",\"text\":\"MCP
        is an open protocol that standardizes how applications provide context to
        LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides
        a standardized way to connect your devices to various peripherals and accessories,
        MCP provides a standardized way to connect AI models to different data sources
        and tools. \\n Why MCP? \\n MCP helps you build agents and complex workflows
        on top of LLMs. LLMs frequently need to integrate with data and tools, and
        MCP provides: \\n \\n A growing list of pre-built integrations that your LLM
        can directly plug into \\n The flexibility to switch between LLM providers
        and vendors \\n Best practices for securing your data within your infrastructure
        \\n \\n General architecture \\n At its core, MCP follows a client-server
        architecture where a host application can connect to multiple servers: \\n
        \\n MCP Hosts : Programs like Claude Desktop, IDEs, or AI tools that want
        to access data through MCP \\n MCP Clients : Protocol clients that maintain
        1:1 connections with servers \\n MCP Servers : Lightweight programs that each
        expose specific capabilities through the standardized Model Context Protocol
        \\n Local Data Sources : Your computer\u2019s files, databases, and services
        that MCP servers can securely access \\n Remote Services : External systems
        available over the internet (e.g., through APIs) that MCP servers can connect
        to \\n \\n Get started \\n Choose the path that best fits your needs: \\n
        Quick Starts \\n Examples \\n Tutorials \\n Building MCP with LLMs Learn how
        to use LLMs like Claude to speed up your MCP development Debugging Guide Learn
        how to effectively debug MCP servers and integrations MCP Inspector Test and
        inspect your MCP servers with our interactive debugging tool MCP Workshop
        (Video, 2hr) \\n Explore MCP \\n Dive deeper into MCP\u2019s core concepts
        and capabilities: \\n Contributing \\n Want to contribute? Check out our Contributing
        Guide to learn how you can help improve MCP. \\n Support and Feedback \\n
        Here\u2019s how to get help or provide feedback: \\n \\n For bug reports and
        feature requests related to the MCP specification, SDKs, or documentation
        (open source), please create a GitHub issue \\n For discussions or Q&amp;A
        about the MCP specification, use the specification discussions \\n For discussions
        or Q&amp;A about other MCP open source components, use the organization discussions
        \\n For bug reports, feature requests, and questions related to Claude.app
        and claude.ai\u2019s MCP integration, please email [email protected]\",\"image\":\"https://mcp.mintlify.app/_next/image?url=%2Fapi%2Fog%3Fdivision%3DDocumentation%26title%3DIntroduction%26description%3DGet%2Bstarted%2Bwith%2Bthe%2BModel%2BContext%2BProtocol%2B%2528MCP%2529%26logoLight%3Dhttps%253A%252F%252Fmintlify.s3.us-west-1.amazonaws.com%252Fmcp%252Flogo%252Flight.svg%26logoDark%3Dhttps%253A%252F%252Fmintlify.s3.us-west-1.amazonaws.com%252Fmcp%252Flogo%252Fdark.svg%26primaryColor%3D%252309090b%26lightColor%3D%2523FAFAFA%26darkColor%3D%252309090b&w=1200&q=100\",\"favicon\":\"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-32x32.png?v=3\"},{\"id\":\"https://docs.anthropic.com/en/docs/agents-and-tools/mcp\",\"title\":\"Model
        Context Protocol (MCP) - Anthropic API\",\"url\":\"https://docs.anthropic.com/en/docs/agents-and-tools/mcp\",\"author\":\"\",\"text\":\"MCP
        is an open protocol that standardizes how applications provide context to
        LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides
        a standardized way to connect your devices to various peripherals and accessories,
        MCP provides a standardized way to connect AI models to different data sources
        and tools. \\n MCP Documentation Learn more about the protocol, how to build
        servers and clients, and discover those made by others. \\n MCP in Claude
        Desktop Learn how to set up MCP in Claude for Desktop, such as letting Claude
        read and write files to your computer\u2019s file system.\",\"favicon\":\"https://mintlify.s3-us-west-1.amazonaws.com/anthropic/_generated/favicon/favicon-32x32.png?v=3\"}],\"costDollars\":{\"total\":0.008,\"search\":{\"neural\":0.005},\"contents\":{\"text\":0.003}}}"
    headers:
      CF-RAY:
      - 9280affc88d1034d-MAD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Sat, 29 Mar 2025 16:19:13 GMT
      NEL:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v4?s=1KVWpaSTodFjGKGawR6wBG4wiA5SYP%2FqrxEM672wOIokVxw9d1YzTPZlYFnCf3TmAssLX3hd3mJ1918UeszuFlRbVeSDnSHRC0kUm4TamwLpZoEXgoR%2FFa8I6dE%3D"}],"group":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-credentials:
      - 'true'
      cf-cache-status:
      - DYNAMIC
      etag:
      - W/"12cc-Nn4aRJddREW/xtdxr11K0RkwvlU"
      server-timing:
      - cfL4;desc="?proto=TCP&rtt=15047&min_rtt=14966&rtt_var=5775&sent=5&recv=7&lost=0&retrans=0&sent_bytes=2824&recv_bytes=996&delivery_rate=185415&cwnd=215&unsent_bytes=0&cid=1141ec0801a0ef6e&ts=1871&x=0"
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Origin
      x-powered-by:
      - Express
      x-ratelimit-limit:
      - '200'
      x-ratelimit-remaining:
      - '198'
      x-ratelimit-reset:
      - '1743265153'
    status:
      code: 200
      message: OK
version: 1
